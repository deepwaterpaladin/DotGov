name: DotGov Scan
on:
  workflow_dispatch:
  schedule:
    - cron: '0 11 * * *'
  issues:
      types:
        - opened

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
        sparse-checkout: |
          main.py
          app
          reports
        sparse-checkout-cone-mode: true

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Create Directories
      run: |
        mkdir -p ./reports
        mkdir -p ./recordings
    
    - name: Install Playwright Browser
      run: playwright install --with-deps chromium
    
    - name: Run Scan
      run: |
        python main.py
        
    - name: Commit new reports and recordings
      run: |
        git config --local user.name "Automated"
        git config --local user.email "actions@users.noreply.github.com"

        # Add and commit reports
        git add reports/*
        if ! git diff --staged --quiet; then
          timestamp=$(date -u)
          git commit -m "added reports for ${timestamp}"
        fi

        # Temporarily allow recordings into the sparse index to commit them
        git sparse-checkout add recordings
        git add recordings/*
        if ! git diff --staged --quiet; then
          timestamp=$(date -u)
          git commit -m "added recordings for ${timestamp}"
        fi
    
        git push
    
        # Remove recordings from sparse-checkout again (avoid pulling next run)
        git sparse-checkout set main.py app reports
